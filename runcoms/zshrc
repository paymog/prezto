#
# Executes commands at the start of an interactive session.
#
# Authors:
#   Sorin Ionescu <sorin.ionescu@gmail.com>
#

# Source Prezto.
if [[ -s "${ZDOTDIR:-$HOME}/.zprezto/init.zsh" ]]; then
  source "${ZDOTDIR:-$HOME}/.zprezto/init.zsh"
fi

autoload -Uz compinit
compinit


# Customize to your needs...
fpath=(/usr/local/share/zsh-completions $fpath)

# vim mode
bindkey -v
export KEYTIMEOUT=1

# disable autocorrect from utility module
unsetopt CORRECT

# vim default editor
export VISUAL=$(which vim)
export EDITOR=$(which vim)

alias rabc='rabbitmqctl'

# aliases
alias rz="source ~/.zshrc"
alias rzp="source ~/.zpreztorc"
alias ez="$EDITOR ~/.zshrc"
alias ezp="$EDITOR ~/.zpreztorc"
alias etc="$EDITOR ~/.tmux.conf"
alias ev="$EDITOR ~/.vimrc"
alias ls='ls -G'
alias dd='cd ~/dd'
#alias vim='nvim'

# solarize light
export FZF_DEFAULT_OPTS='
--color fg:240,bg:230,hl:33,fg+:241,bg+:221,hl+:33
--color info:33,prompt:33,pointer:166,marker:166,spinner:33
'
# solarized dark
export FZF_DEFAULT_OPTS='
--color dark,hl:33,hl+:37,fg+:235,bg+:136,fg+:254
--color info:254,prompt:37,spinner:108,pointer:235,marker:235
'

# --files: List files that would be searched but do not search
# --no-ignore: Do not respect .gitignore, etc...
# --hidden: Search hidden files and folders
# --follow: Follow symlinks
# --glob: Additional conditions for search (in this case ignore everything in the .git/ folder)
export FZF_DEFAULT_COMMAND='rg --files --hidden --follow --glob "!.git/*"'
export FZF_CTRL_T_COMMAND='rg --files --hidden --follow --glob "!.git/*"'

alias rg="rg -i"

# git aliases
alias gst='git status'
alias gaa='git add --all'
alias gd='git diff'
alias gco='git checkout --recurse-submodules'
alias gcob='git checkout -b'
alias gcom='git checkout main --recurse-submodules'
alias gcod='git checkout develop'
alias gp='git push'
alias gpu='git push -u'
alias gptu='git push upstream'
alias gptuf='git push upstream -f'
alias gf='git pull --rebase'
alias gca='gc --amend'
alias gb='git branch --list'
alias grm='git rebase main'
alias grd='git rebase develop'
alias gro='git rebase --onto'
alias gfp="git fetch -p"
alias gacapf="gaa && gca --no-edit && gpf"
alias gfu="git fetch upstream && git checkout main && git merge upstream/main && git push"

# tmux aliases
alias tnew="tmux new -s"
alias ta="tmux a -t"
alias tl="tmux ls"
alias tk="tmux kill-session -t"
alias rt="tmux source-file ~/.tmux.conf"

# utility aliases
alias grepp="grep -iIrnp"

# virtualenv
alias vac="source venv/bin/activate || source .venv/bin/activate"
alias dac="deactivate"

# docker
alias d="docker"
alias dc="docker-compose"
alias dzk="docker-compose kill"

# this is a doozie. The inner command gets the container id of the last run
# container
# The rest of this connects to a container and starts bash
alias clc="docker exec -t -i $(docker ps -aq --last 1) /bin/bash"

# kubernetes
alias k="kubectl"
alias mk="minikube"
alias kgp="k get pods"
alias kgd="k get deployments"
alias kl="k logs"
alias klf="kl -f"
alias kdp="k describe pod"
alias kdd="k describe deployment"
alias kgs="k get svc"
alias kds="k describe svc"
alias kccc='k config current-context'
alias kcuc='k config use-context'
alias umk="kubectl config use-context minikube"

# envsubst isn't linked when installed with brew
alias envsubst="/usr/local/opt/gettext/bin/envsubst"

alias watch='watch '

alias ns="nix-shell --command zsh"
alias pns="ns ~/plutus/shell.nix"

alias yaml2js="python3 -c 'import sys, yaml, json; [json.dump(y, sys.stdout, indent=4) for y in yaml.load_all(sys.stdin)]'"

function light() {
  sed -i '' "s/background=dark/background=light/g" ~/.vimrc
  sed -i '' "s/solarized '256'/solarized 'light'/g" ~/.tmux.conf
  tmux source-file ~/.tmux.conf
}
function dark() {
  sed -i '' "s/background=light/background=dark/g" ~/.vimrc
  sed -i '' "s/solarized 'light'/solarized '256'/g" ~/.tmux.conf
  tmux source-file ~/.tmux.conf
}

function kexec() {
  k exec -it $1 /bin/bash
}


#bindkey -e
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

export PATH=$HOME/go/bin:$PATH

# pyenv stuff https://stackoverflow.com/a/66483524/1489726
export PATH="$HOME/.pyenv/bin:$PATH"
export PATH="/usr/local/bin:$PATH"

eval "$(pyenv init -)"
eval "$(pyenv virtualenv-init -)"
export LDFLAGS="-L/usr/local/opt/zlib/lib -L/usr/local/opt/bzip2/lib"
export CPPFLAGS="-I/usr/local/opt/zlib/include -I/usr/local/opt/bzip2/include"


function revert-expand-or-complete {
  zle expand-or-complete
}

zle -N expand-or-complete-with-indicator revert-expand-or-complete


# https://kubernetes.io/docs/tasks/tools/install-kubectl/
source <(kubectl completion zsh)
compdef __start_kubectl k

source ~/.workrc
eval "$(pyenv virtualenv-init -)"
